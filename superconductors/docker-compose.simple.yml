version: '3.8'

services:
  # PostgreSQL Database for experiments
  postgres:
    image: postgres:15-alpine
    container_name: research-postgres
    environment:
      POSTGRES_DB: experiments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: research123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - research-net

  # Next.js Web Interface
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: research-web
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:research123@postgres:5432/experiments
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - research-net

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: research-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@research.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - tools  # Only start with --profile tools
    networks:
      - research-net

volumes:
  postgres_data:
  pgadmin_data:

networks:
  research-net:
    driver: bridge